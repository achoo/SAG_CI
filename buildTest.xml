<?xml version="1.0"?>
<project name="test" default="startTest" basedir=".">

	<!--property name="testSuitePackagesPath" value="${SAGHome}/IntegrationServer/packages/"/-->
	<property name="testSuitePackagesPath" value="${isTestDir}"/>

	<property name="testPackageDirRelative" value="resources/test/"/>

	<path id="junitClasspath">
		<fileset dir="${SAGHome}/common/lib" includes="**/*.jar" />
		<fileset dir="${SAGHome}/common/lib/ext" includes="**/*.jar" />
		<fileset dir="${SAGHome}/IntegrationServer/lib" includes="wm-isserver.jar" />
		<fileset dir="${SAGHome}/IntegrationServer/lib/jars" includes="**/*.jar" />
		<fileset dir="./lib" includes="**/*.jar" />
	</path>
	
	<target name="startTest" depends="jenkinsCheck">		
		<var name="faileTestList" value=""/>
		
		<for param="packageName" list="${ISTestProjectNames}" delimiter=";" keepgoing="true" trim="true">
			<sequential>
				<trycatch reference="exception_ref">
					<try>
						<antcall target="junitTestAndReportXML">
							<param name="testPackageName" value="${testSuitePackagesPath}/@{packageName}" />
						</antcall>
						<!--antcall target="junitTestAndReportJava">
							<param name="testPackageName" value="${testSuitePackagesPath}/@{packageName}" />
						</antcall-->
					</try>
					<catch>
						<echo message="JUnit test for package '@{packageName}' failed" />
						<var name="faileTestList" value="${faileTestList}'@{packageName}', " />
						<property name="testFail" refid="exception_ref" />
					</catch>
				</trycatch>
			</sequential>
		</for>
		
		<if>
			<not>
				<equals arg1="${faileTestList}" arg2="" trim="true" />
			</not>
			<then>
				<fail unless="isReportingToJenkins" message="At least one test failed. Failed packages: ${faileTestList}" />
			</then>
			<else>
				<echo message="All JUnit Tests passed."/>
			</else>
		</if>
	</target>

	<target name="junitInitTest">
		<echo message="Init JUnit tests for package ${testPackageName}" />
		
		<property name="testPackageDir" value="${testPackageName}/${testPackageDirRelative}" />
		<!--property name="testPackageXmlDir" value="${testPackageDir}/setup" /-->
                <property name="testPackageXmlDir" value="${testPackageDir}/" />
		<property name="testPackageReportsDir" value="${testPackageDir}/reports" />
	</target>
	
	<target name="junitCleanUp">
		<delete dir="${testPackageReportsDir}" />								
	</target>
	
	<target name="junitCheckTestFolder">
		<available property="testPackageXmlDir.exists" file="${testPackageXmlDir}" type="dir" />
	</target>

	<!--execute only if the XML Test directory exists in the test package -->
	<target name="junitTestAndReportXML" depends="junitInitTest,junitCleanUp,junitCheckTestFolder" if="testPackageXmlDir.exists">
		<echo message="Starting JUnit tests for package '${testPackageName}'"/>
		
		<mkdir dir="${testPackageReportsDir}" />

		<property name="resourcesFolder" value="${testPackageName}/resources" />
		
		<for param="testSetupFile" keepgoing="true">
			<path>
				<!--fileset dir="${testPackageXmlDir}" includes="*.xml" /-->
				<fileset dir="${testPackageXmlDir}" includes="**/setup/*.xml" />
			</path>
			<sequential>
				<basename property="fileBasename" file="@{testSetupFile}" suffix=".xml" />
				<echo message="Running JUnit test '@{testSetupFile}'"/>
				<junit printsummary="yes" haltonfailure="no" fork="true" failureproperty="test:failure" showoutput="true" dir="${testPackageName}">
					<jvmarg value="-DwebMethods.integrationServer.name=${deployerHost}" />
					<jvmarg value="-DwebMethods.integrationServer.port=${deployerPort}" />
					<jvmarg value="-DwebMethods.integrationServer.userid=${deployerUsername}" />
					<jvmarg value="-DwebMethods.integrationServer.password=${deployerPassword}" />
					<jvmarg value="-DwebMethods.test.setup.filename=@{testSetupFile}" />
					<jvmarg value="-Dresources.folder=${resourcesFolder}" />
					<classpath>
						<path refid="junitClasspath" />
					</classpath>
					<formatter type="xml" />
					<test name="com.wm.ps.test.WmTestSuite" outfile="TEST-${fileBasename}" haltonerror="false" haltonfailure="false" todir="${testPackageReportsDir}" />
				</junit>
				<replaceregexp file="${testPackageReportsDir}/TEST-${fileBasename}.xml" match=" name=&quot;com.wm.ps.test.WmTestSuite&quot; " replace=" name=&quot;com.wm.ps.test.WmTestSuite [${fileBasename}]&quot; " />												
				<var name="fileBasename" unset="true" />
			</sequential>
		</for>

		
		<!-- if jenkins report dir is set publicate results there-->
		<antcall target="junitCopyResultsToReportsDir">
			<param name="current.report.dir" value="${testPackageReportsDir}" />
		</antcall>
		
		
		<!-- create HTML report of the test results -->
		<junitreport todir="${testPackageReportsDir}">
			<fileset dir="${testPackageReportsDir}">
				<include name="TEST-*.xml" />
				<exclude name="TESTS-TestSuites.xml" />
			</fileset>
			<report format="frames" todir="${testPackageReportsDir}/html" />
		</junitreport>

		<fail if="test:failure">Unit test failure</fail>
	</target>





	<!-- if jenkins report dir is set publicate results there-->
	<target name="junitCopyResultsToReportsDir" depends="jenkinsCheck" if="isReportingToJenkins">
		<echo message="Copying JUnit test results to folder '${jenkinsReportDir}'"/>
		<copy todir="${jenkinsReportDir}">
			<fileset dir="${current.report.dir}">
				<include name="*.*" />
				<exclude name="TESTS-TestSuites.xml"/>
			</fileset>
		</copy>
	</target>
	
	<!-- will jenkins evaluate the test results -->
	<target name="jenkinsCheck" >
		 <condition property="isReportingToJenkins">
		 	<not>
            	<equals arg1="${jenkinsReportDir}" arg2="" trim="true"/>
	 		</not>	
	     </condition>
	</target>
	
</project>
