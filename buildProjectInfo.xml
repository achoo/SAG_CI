<?xml version="1.0"?>
<project name="InspectAssets" default="collectProjectInfo" basedir="." >
					
	<macrodef name="add-isconfig-asset">
	   	<attribute name="targetProperty"/>
	   	<sequential>
	   		<!-- check if the project root dir is empty -->
   			<if>
				<equals arg1="${isConfigDir}" arg2="" trim="true" />
			<then>
				<!-- exit here do nothing -->
				<property name="@{targetProperty}" value=""/>
			</then>
				<else>
			    	<property name="@{targetProperty}" value="isconfiguration"/>
				</else>
			</if>
        </sequential>
	</macrodef>	

		
	<macrodef name="get-asset-names">
	   	<attribute name="projectTypeBaseDir"/>
	   	<attribute name="targetProperty"/>
	   	<attribute name="selectionPattern" default="*"/>
		<attribute name="excludePattern" default=".*,replicate"/>
	   	<sequential>
	   		<!-- check if the project root dir is empty -->
   			<if>
				<equals arg1="@{projectTypeBaseDir}" arg2="" trim="true" />
			<then>
				<!-- exit property here -->
		    	<property name="@{targetProperty}" value=""/>
			</then>
				<else>
					<!-- if directory is present - traverse it -->
					<var name="assetNamesList" value= "" />
					
					<for param="assetName" keepgoing="true" trim="true">
						<path>
							<dirset dir="@{projectTypeBaseDir}" includes="@{selectionPattern}" excludes="@{excludePattern}" />
						</path>
						<sequential>
							<basename property="assetBaseName" file="@{assetName}"/>	
							
							<if>
								<equals arg1="${assetNamesList}" arg2="" trim="true" />
								<then>
									<var name="assetNamesList" value= "${assetBaseName}" />
								</then>
								<else>
									<var name="assetNamesList" value= "${assetNamesList};${assetBaseName}" />				
								</else>
							</if>
										
							<var name="assetBaseName" unset="true" />
						</sequential>
					</for>
					
					<!-- exit property here -->
			    	<property name="@{targetProperty}" value="${assetNamesList}"/>
				</else>
			</if>
        </sequential>
	</macrodef>	
	    		
	    		
	<macrodef name="get-bpm-process-names">
	   	<attribute name="projectTypeBaseDir"/>
	   	<attribute name="targetProperty"/>
	   	<sequential>
	   		<!-- check if the project root dir is empty -->
   			<if>
				<equals arg1="@{projectTypeBaseDir}" arg2="" trim="true" />
			<then>
				<!-- exit property here -->
		    	<property name="@{targetProperty}" value=""/>
			</then>
				<else>
					<var name="assetNamesList" value= "" />
						
					<for param="assetName" keepgoing="true" trim="true">
						<path>
							<dirset dir="@{projectTypeBaseDir}" includes="*" excludes=".*,replicate" />
						</path>
						<sequential>
							<basename property="assetBaseName" file="@{assetName}"/>	
						
							<for param="processName" keepgoing="true" trim="true">
								<path>
									<fileset dir="@{assetName}" includes="**/*.process" />
								</path>
								<sequential>
										<basename property="processBaseName" file="@{processName}" suffix=".process" />
									
										<if>
											<equals arg1="${assetNamesList}" arg2="" trim="true" />
											<then>
												<var name="assetNamesList" value= "${assetBaseName}/${processBaseName}"/>
											</then>
											<else>
												<var name="assetNamesList" value= "${assetNamesList};${assetBaseName}/${processBaseName}"/>				
											</else>
										</if>
									
										<var name="processBaseName" unset="true" />
								</sequential>
							</for>
										
							<var name="assetBaseName" unset="true" />
						</sequential>
					</for>
					
					<!-- exit property here -->
			    	<property name="@{targetProperty}" value="${assetNamesList}"/>
				</else>
			</if>
        </sequential>
	</macrodef>	

		
	<target name="collectProjectInfo" description="get the names of all IS Packages, MWS Projects, BPM Pricesses, Rules Projects and TestPackages">
		<get-asset-names projectTypeBaseDir="${isProjectsDir}" targetProperty="isProjectNames"/>
		<echo message="IS Project Names: ${isProjectNames}"/>
		
		<add-isconfig-asset targetProperty="isConfigAsset"/>
		<echo message="IS Config Asset: ${isConfigAsset}"/>
			
		<get-asset-names projectTypeBaseDir="${mwsProjectsDir}" targetProperty="mwsProjectNames"/>
		<echo message="MWS Project Names: ${mwsProjectNames}"/>

		<get-asset-names projectTypeBaseDir="${rulesProjectsDir}" targetProperty="rulesProjectNames"/>
		<echo message="Rules Project Names: ${rulesProjectNames}"/>

		<get-bpm-process-names projectTypeBaseDir="${bpmProjectsDir}" targetProperty="bpmProjectNames"/>
		<echo message="BPM Project Names: ${bpmProjectNames}"/>

		<!--get-asset-names projectTypeBaseDir="${isProjectsDir}" targetProperty="ISTestProjectNames" selectionPattern="${testPackageNamePattern}"/-->
                <get-asset-names projectTypeBaseDir="${isTestDir}" targetProperty="ISTestProjectNames"/>
		<echo message="IS Test Project Names: ${ISTestProjectNames}"/>

	</target>
	
   
	
</project>
